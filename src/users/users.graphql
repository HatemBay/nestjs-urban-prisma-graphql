scalar DateTime

type User {
  id: Int!
  username: String!
  email: String!
  password: String!
  name: String
  role: Role!
  is_u_18: Boolean
  created_at: DateTime!
  updated_at: DateTime!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  name: String
  role: Role!
  is_u_18: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input UpdateUserInput {
  username: String
  email: String
  password: String
  name: String
  role: Role
  is_u_18: Boolean
  updated_at: DateTime
}

input FindUserInput {
  id: Int
  username: String
  email: String
}

type Query {
  users: [User]!
  user(findUserInput: FindUserInput!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(
    findUserInput: FindUserInput!
    updateUserInput: UpdateUserInput!
  ): User!
  removeUser(findUserInput: FindUserInput!): User
}

enum Role {
  ADMIN
  USER
  GUEST
}
